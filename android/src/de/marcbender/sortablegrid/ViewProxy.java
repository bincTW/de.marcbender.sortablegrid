/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2017 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package de.marcbender.sortablegrid;
import java.util.HashMap;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiC;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.util.TiConvert;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiCompositeLayout;
import org.appcelerator.titanium.view.TiCompositeLayout.LayoutArrangement;
import org.appcelerator.titanium.view.TiUIView;
import org.appcelerator.titanium.util.TiRHelper;
import org.appcelerator.titanium.TiApplication;
import android.content.res.Resources;
import org.appcelerator.titanium.TiDimension;
import android.util.AttributeSet;

import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
//import android.widget.LinearLayout;
//import android.widget.LinearLayout.LayoutParams;
import android.graphics.Color;
import org.appcelerator.titanium.view.TiDrawableReference;

import android.app.Activity;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;


import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.TextView;
import android.content.Context;
import de.marcbender.sortablegrid.R;
import android.widget.BaseAdapter;
import android.os.Bundle;
import android.view.View;
import java.util.ArrayList;
import java.util.List;


// This proxy can be created by calling TiSortablegrid.createExample({message: "hello world"})
@Kroll.proxy(creatableInModule=TiSortablegridModule.class)
//public class ViewProxy extends TiViewProxy implements DragSwipeAdapter.OnItemClick<UserModel>
public class ViewProxy extends TiViewProxy
{
	// Standard Debugging variables
	private static final String LCAT = "ViewProxy";
	private static final boolean DBG = TiConfig.LOGD;
	private List<HashMap<String, Object>> dataSourceList = new ArrayList<HashMap<String, Object>>();

    private static final int NUM_COLUMN = 5;
    private static final int NUM_ROW = 7;
 	 String packageName;
	 Resources resources;
     Activity context;
	 TiViewProxy myProxy;
	 TiUIView myView;




	 TiCompositeLayout compositeView;
	 ArrayList<Object> itemsList;
	 ArrayList<TiDrawableReference> imageReferences;
	 LayoutInflater inflater;
	 RelativeLayout layout;
	 RelativeLayout layout2;





	 int id_main_layout = 0;
	 int id_dragableGridview1 = 0;
	 int id_item_layout = 0;
	int resId_viewHolder = 0;
     int id_bottomSheet = 0;

	public static final String PROPERTY_ITEMS = "items";





	private class SGV extends TiUIView
	{
		public SGV(TiViewProxy proxy) {
			super(proxy);
			myProxy = proxy;


			try {
			   // id_main_layout = TiRHelper.getResource("layout.layout_main");

			    id_item_layout = TiRHelper.getResource("layout.item_layout");



	         } catch (TiRHelper.ResourceNotFoundException e) {
	              //

				Log.d(LCAT, "RESOURCE NOT FOUND");


	         }
			inflater = LayoutInflater.from(proxy.getActivity());

			resources = proxy.getActivity().getResources();

		 //	resId_viewHolder = resources.getIdentifier("layout_main", "layout", proxy.getActivity().getPackageName());
try{
		 	id_main_layout = TiRHelper.getResource("layout.layout_main");
			id_dragableGridview1 = TiRHelper.getResource("id.dragGridView");
		}catch (TiRHelper.ResourceNotFoundException e) {

		}

			layout = (RelativeLayout) inflater.inflate(id_main_layout, null);


		//	resId_viewHolder = resources.getIdentifier("item_layout", "layout", proxy.getActivity().getPackageName());


            //mGridview = (DragableGridview) layout.findViewById(id_dragableGridview1);


						final DragGridView mDragGridView = (DragGridView) layout.findViewById(id_dragableGridview1);
						for (int i = 0; i < 15; i++) {
							HashMap<String, Object> itemHashMap = new HashMap<String, Object>();
							try{
								itemHashMap.put("item_image",TiRHelper.getResource("drawable.com_tencent_open_notice_msg_icon_big"));

							}catch (TiRHelper.ResourceNotFoundException e) {

							}
							itemHashMap.put("item_text", " " + Integer.toString(i));
							dataSourceList.add(itemHashMap);
						}

						final DragAdapter mDragAdapter = new DragAdapter(proxy.getActivity(), dataSourceList);

						mDragGridView.setAdapter(mDragAdapter);


						mDragGridView.setOnItemClickListener(new OnItemClickListener() {

							@Override
							public void onItemClick(AdapterView<?> parent, View view,
									int position, long id) {
								mDragGridView.removeItemAnimation(position);
							}
						});





// 			try {
// 			    id_drawer_layout = TiRHelper.getResource("layout.main");
// 	        	id_bottomSheet = TiRHelper.getResource("id.sortable_grid");
// 				id_layout_item = TiRHelper.getResource("layout.item");

// 	         } catch (TiRHelper.ResourceNotFoundException e) {
// 	              //

// 				Log.d(LCAT, "RESOURCE NOT FOUND");


// 	         }
// 				inflater = LayoutInflater.from(myProxy.getActivity());

// 	       		 layout = (LinearLayout) inflater.inflate(id_drawer_layout, null);





// //		        mSortableGridView = (SortableGridView) layout.findViewById(id_bottomSheet);




 		      setNativeView(layout);

		}






		@Override
		public void processProperties(KrollDict d)
		{
			super.processProperties(d);


			if (d.containsKey(PROPERTY_ITEMS)) {
				 itemsList = new ArrayList<Object>();
				 for (Object o : (Object[]) d.get(PROPERTY_ITEMS)) {
				 	itemsList.add(o);


						//
						// TiViewProxy contentView = (TiViewProxy) o;
						//
            // 			TiUIView thatView = contentView.peekView();
						//
            // 			myView.add(thatView);


				 }


 				 // imageReferences = new ArrayList<TiDrawableReference>();
				  // for (Object o : imageSources) {

				  // 	imageReferences.add(TiDrawableReference.fromObject(myProxy, o));
				  // }
				// adapter = new ItemsListAdapter();
	           // mGridview.setAdapter(adapter);

	            // mGridview.setOnItemClick(new OnItemClickListener() {

	            //     @Override
	            //     public void click(int index) {
	            //       //  Log.d(TAG, "item : " + index + " -- clicked!");
	            //     }
	            // });

		           //  mGridview.setOnSwappingListener(new OnSwappingListener() {

		           //      @Override
		           //      public void waspping(int oldIndex, int newIndex) {
		           //         // Book book = books.get(oldIndex);
		           //         // books.remove(oldIndex);
		           //         //books.add(newIndex, book);

		           //          //adapter.notifyDataSetChanged();
		           //      }
		           //  });

			}

		}
	}





	// Constructor
	public ViewProxy()
	{
		super();
	}

	@Override
	public TiUIView createView(Activity activity)
	{
		TiUIView view = new SGV(this);
		view.getLayoutParams().autoFillsHeight = true;
		view.getLayoutParams().autoFillsWidth = true;
		myView = view;
		return view;
	}

	// Handle creation options
	@Override
	public void handleCreationDict(KrollDict options)
	{
		super.handleCreationDict(options);

		if (options.containsKey("message")) {
			Log.d(LCAT, "example created with message: " + options.get("message"));
		}
	}



	// Methods
	@Kroll.method
	public void printMessage(String message)
	{
		Log.d(LCAT, "printing message: " + message);
	}


	@Kroll.getProperty @Kroll.method
	public String getMessage()
	{
        return "Hello World from my module";
	}

	@Kroll.setProperty @Kroll.method
	public void setMessage(String message)
	{
	    Log.d(LCAT, "Tried setting module message to: " + message);
	}





}
