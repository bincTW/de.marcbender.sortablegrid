/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2017 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package de.marcbender.sortablegrid;
import java.util.HashMap;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiC;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.util.TiConvert;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiCompositeLayout;
import org.appcelerator.titanium.view.TiCompositeLayout.LayoutArrangement;
import org.appcelerator.titanium.view.TiCompositeLayout.LayoutParams;
import org.appcelerator.titanium.view.TiUIView;
import org.appcelerator.titanium.util.TiRHelper;
import org.appcelerator.titanium.TiApplication;
import android.content.res.Resources;
import org.appcelerator.titanium.TiDimension;
import android.util.AttributeSet;

import android.widget.RelativeLayout;
// import android.widget.RelativeLayout.LayoutParams;
//import android.widget.LinearLayout;
//import android.widget.LinearLayout.LayoutParams;
import android.graphics.Color;
import org.appcelerator.titanium.view.TiDrawableReference;

import android.app.Activity;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.view.View.OnClickListener;

import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.TextView;
import android.content.Context;
import de.marcbender.sortablegrid.R;
import android.widget.BaseAdapter;
import android.os.Bundle;
import java.util.ArrayList;
import java.util.List;
import android.view.ViewGroup;
import android.view.ViewParent;


// This proxy can be created by calling TiSortablegrid.createExample({message: "hello world"})
@Kroll.proxy(creatableInModule=TiSortablegridModule.class)
//public class ViewProxy extends TiViewProxy implements DragSwipeAdapter.OnItemClick<UserModel>
public class ViewProxy extends TiViewProxy
{
	// Standard Debugging variables
	private static final String LCAT = "ViewProxy";
	private static final boolean DBG = TiConfig.LOGD;
	private List<HashMap<String, Object>> dataSourceList = new ArrayList<HashMap<String, Object>>();

    private static final int NUM_COLUMN = 5;
    private static final int NUM_ROW = 7;
 	 String packageName;
	 Resources resources;
     Activity context;
	 TiViewProxy myProxy;
	 TiUIView myView;

	 DragGridView mDragGridView;


	 TiCompositeLayout compositeView;
	 ArrayList<Object> itemsList;
	 ArrayList<TiDrawableReference> imageReferences;
	 LayoutInflater inflater;
	 RelativeLayout layout;
	 RelativeLayout layout2;
	 int id_main_layout = 0;
	 int id_dragableGridview1 = 0;
	 int resId_viewHolder = 0;
     int id_bottomSheet = 0;

	public static final String PROPERTY_ITEMS = "data";
	public static final String PROPERTY_ITEM = "item";

	View.OnClickListener myOnlyhandler;



	private class SGV extends TiUIView
	{
		public SGV(TiViewProxy proxy) {
			super(proxy);
			myProxy = proxy;

			inflater = LayoutInflater.from(proxy.getActivity());
			context = proxy.getActivity();
			resources = proxy.getActivity().getResources();

			try{
			 	id_main_layout = TiRHelper.getResource("layout.layout_main");
				id_dragableGridview1 = TiRHelper.getResource("id.dragGridView");
			}catch (TiRHelper.ResourceNotFoundException e) {

			}

			layout = (RelativeLayout) inflater.inflate(id_main_layout, null);

			  mDragGridView = (DragGridView) layout.findViewById(id_dragableGridview1);


			  mDragGridView.setHorizontalSpacing(4);
			  mDragGridView.setVerticalSpacing(4);

			  //mDragGridView.setColumnWidth();

			  final DragAdapter mDragAdapter = new DragAdapter(myProxy.getActivity(), dataSourceList);

			  mDragGridView.setAdapter(mDragAdapter);



 		      setNativeView(layout);

		}





		@Override
		public void processProperties(KrollDict d)
		{
				super.processProperties(d);

				if (d.containsKey(PROPERTY_ITEMS)) {
					 itemsList = new ArrayList<Object>();
					 for (Object o : (Object[]) d.get(PROPERTY_ITEMS)) {
					 	itemsList.add(o);

				 }

			// myOnlyhandler = new OnClickListener() {
			//   public void onClick(View v) {


			//   				Log.d(LCAT, "+++++++++++++++++++  onClick ");

			//       // switch(v.getId()) {
			//       //   case R.id.b1:
			//       //     // it was the first button
			//       //     break;
			//       //   case R.id.b2:
			//       //     // it was the second button
			//       //     break;
			//       // }
			//   }
			// };




		 		for (int i = 0; i < itemsList.size(); i++) {
		 			HashMap<String, Object> itemHashMap = new HashMap<String, Object>();

		 			View pageView = null;
		 			ViewGroup.LayoutParams layoutParams = null;

		 			TiViewProxy thisproxy = (TiViewProxy) itemsList.get(i);
		 			if (thisproxy != null) {
		 			 TiUIView uiView = thisproxy.getOrCreateView();

		 			 if (uiView != null) {

		 			 	layoutParams = uiView.getLayoutParams();

						TiDimension nativeWidth = new TiDimension(TiConvert.toString(thisproxy.getWidth()), TiDimension.TYPE_WIDTH);
						TiDimension nativeHeight = new TiDimension(TiConvert.toString(thisproxy.getHeight()), TiDimension.TYPE_HEIGHT);

						layoutParams.height = (int)(nativeHeight.getValue());

						layoutParams.width = (int)(nativeWidth.getValue());

						pageView = uiView.getOuterView();


						TiCompositeLayout pageLayout = new TiCompositeLayout(context);
						pageLayout.addView(pageView, layoutParams);

						pageLayout.setClipChildren(false);
				       	pageLayout.setClipToPadding(false);

						if (thisproxy.hasProperty(TiC.PROPERTY_ID)) {
							pageLayout.setId(5000+TiConvert.toInt((thisproxy.getProperty(TiC.PROPERTY_ID))));
						}

		 				itemHashMap.put("item_view", pageLayout);
		 				dataSourceList.add(itemHashMap);

		 			 }
		 			}
		 		}

		 		// mDragGridView.setOnItemClickListener(new OnItemClickListener() {
		 		// 	@Override
		 		// 	public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
 				// 			Log.d(LCAT, "+++++++++++++++++++++++  onItemClick");

		 		// 			mDragGridView.removeItemAnimation(position);
		 		// 	}
			  // 	});

			}

		}
	}





	// Constructor
	public ViewProxy()
	{
		super();
	}

	@Override
	public TiUIView createView(Activity activity)
	{
		TiUIView view = new SGV(this);
		view.getLayoutParams().autoFillsHeight = true;
		view.getLayoutParams().autoFillsWidth = true;
		myView = view;
		return view;
	}

	// Handle creation options
	@Override
	public void handleCreationDict(KrollDict options)
	{
		super.handleCreationDict(options);

		if (options.containsKey("message")) {
			Log.d(LCAT, "example created with message: " + options.get("message"));
		}


	}



	@Kroll.method
	public void deleteItem(String id) {

			View v = mDragGridView.findViewById(5000+Integer.parseInt(id));

			if (v!=null){
				int leftOffset = v.getLeft();
				int topOffset = v.getTop();

				int midX = leftOffset + (v.getWidth()/2);
				int midY = topOffset + (v.getHeight()/2);

				int position = mDragGridView.getItemPosition(midX,midY);

				Log.d(LCAT, "POSITION: " + position);


				mDragGridView.removeItemAnimation(position);
			}

	}


}
